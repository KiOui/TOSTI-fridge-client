#!/bin/bash

# TOSTI Environment Setup Script
# This script helps you configure API credentials for the TOSTI Fridge Client

ENV_FILE="/etc/tosti-fridge.env"

# Colors
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m'

print_status() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} ❌ $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} ⚠️  $1"
}

# Check if running as root or with sudo
if [[ $EUID -eq 0 ]]; then
    SUDO=""
else
    SUDO="sudo"
fi

print_status "🍟 TOSTI Fridge Client Environment Setup"
echo

# Check if environment file exists
if [ -f "$ENV_FILE" ]; then
    print_status "⚙️  Current environment configuration:"
    if $SUDO grep -q "TOSTI_CLIENT_SECRET=.*[^=]" "$ENV_FILE"; then
        echo "  🔐 CLIENT_SECRET: [CONFIGURED]"
    else
        echo "  🔐 CLIENT_SECRET: [NOT SET]"
    fi
    if $SUDO grep -q "TOSTI_CLIENT_ID=.*[^=]" "$ENV_FILE"; then
        echo "  🆔 CLIENT_ID: [CONFIGURED]"
    else
        echo "  🆔 CLIENT_ID: [NOT SET]"
    fi
    api_url=$($SUDO grep "TOSTI_API_BASE_URL=" "$ENV_FILE" 2>/dev/null | cut -d'=' -f2-)
    echo "  🌐 API_BASE_URL: ${api_url:-[NOT SET]}"
    serial_input=$($SUDO grep "TOSTI_SERIAL_INPUT=" "$ENV_FILE" 2>/dev/null | cut -d'=' -f2-)
    echo "  📱 SERIAL_INPUT: ${serial_input:-[NOT SET]}"
    echo
else
    print_warning "Environment file not found. Creating new configuration."
    echo
fi

# Get current values if they exist
if [ -f "$ENV_FILE" ]; then
    current_client_id=$($SUDO grep "TOSTI_CLIENT_ID=" "$ENV_FILE" 2>/dev/null | cut -d'=' -f2-)
    current_client_secret=$($SUDO grep "TOSTI_CLIENT_SECRET=" "$ENV_FILE" 2>/dev/null | cut -d'=' -f2-)
    current_api_url=$($SUDO grep "TOSTI_API_BASE_URL=" "$ENV_FILE" 2>/dev/null | cut -d'=' -f2-)
    current_serial_input=$($SUDO grep "TOSTI_SERIAL_INPUT=" "$ENV_FILE" 2>/dev/null | cut -d'=' -f2-)
fi

# Set defaults
default_api_url="${current_api_url:-https://tosti.science.ru.nl}"

# Prompt for values
echo "🔑 Enter your TOSTI configuration:"
echo

read -p "🆔 Client ID [${current_client_id}]: " client_id
client_id=${client_id:-$current_client_id}

if [ -n "$current_client_secret" ]; then
    read -p "🔐 Client Secret [***hidden***] (press Enter to keep current): " client_secret
    client_secret=${client_secret:-$current_client_secret}
else
    read -p "🔐 Client Secret: " client_secret
fi

read -p "🌐 API Base URL [$default_api_url]: " api_url
api_url=${api_url:-$default_api_url}

# Show available serial devices
echo
print_status "🔍 Available serial devices:"
ls -la /dev/serial/by-id/ 2>/dev/null || echo "No serial devices found"
echo

if [ -n "$current_serial_input" ]; then
    read -p "📱 Serial Port [$current_serial_input]: " serial_input
    serial_input=${serial_input:-$current_serial_input}
else
    read -p "📱 Serial Port: " serial_input
fi

# Validate inputs
if [ -z "$client_id" ]; then
    print_error "Client ID cannot be empty"
    exit 1
fi

if [ -z "$client_secret" ]; then
    print_error "Client Secret cannot be empty"
    exit 1
fi

if [ -z "$api_url" ]; then
    print_error "API Base URL cannot be empty"
    exit 1
fi

if [ -z "$serial_input" ]; then
    print_error "Serial port cannot be empty"
    exit 1
fi

# Check if serial port exists
if [ ! -e "$serial_input" ]; then
    print_warning "Serial port $serial_input not found!"
    print_status "🔍 Available serial devices:"
    ls -la /dev/serial/by-id/ 2>/dev/null || echo "No serial devices found"
    echo
    read -p "Continue anyway? (y/N): " continue_response
    if [[ ! "$continue_response" =~ ^[Yy]$ ]]; then
        exit 1
    fi
fi

# Write configuration
print_status "💾 Writing configuration to $ENV_FILE..."

$SUDO tee "$ENV_FILE" > /dev/null << EOF
# TOSTI Configuration
# Generated by setup_env.sh on $(date)
TOSTI_CLIENT_SECRET=$client_secret
TOSTI_CLIENT_ID=$client_id
TOSTI_API_BASE_URL=$api_url
TOSTI_SERIAL_INPUT=$serial_input
EOF

# Set secure permissions
$SUDO chmod 600 "$ENV_FILE"
$SUDO chown root:root "$ENV_FILE"

print_status "✅ Environment configuration saved successfully!"
print_status "📋 Configuration:"
echo "  🆔 Client ID: $client_id"
echo "  🔐 Client Secret: ${client_secret:0:8}..."
echo "  🌐 API Base URL: $api_url"
echo "  📱 Serial Port: $serial_input"
echo

print_status "🔄 To apply changes, restart the TOSTI service:"
echo "  ./manage_tosti.sh restart"
echo
print_status "🛠️  Or use the management script:"
echo "  📊 ./manage_tosti.sh status    # Check current status"
echo "  📝 ./manage_tosti.sh logs      # View logs"
echo "  🧪 ./manage_tosti.sh test      # Test serial port"